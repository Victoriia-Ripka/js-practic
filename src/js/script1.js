"use strict";
// ========== –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç–∏–µ 4. –§—É–Ω–∫—Ü–∏–∏ ==========


// Example 1 - –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calcBMI(weight, height) –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞.
//–î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤ –∫–∏–ª–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤—ã—Å–æ—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö.
// –í–µ—Å –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏. –ù–µ—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –≤–∏–¥–µ 24.7 –∏–ª–∏ 24,7,
//—Ç–æ –µ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—è—Ç–∞—è.
// –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π;

// function calcBMI(weight, height) {
//   const weightNumber = parseFloat(weight.replace(',', '.'));
//   const heightNumber = parseFloat(height.replace(',', '.'));
//   const BMI = weightNumber / (heightNumber * heightNumber);
//   return BMI.toFixed(1);
// }


// const bmi = calcBMI('88,3', '1.75');
// console.log(bmi); // 28.8


// Example 2 - –ú–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é min(a,b), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª a –∏ b.

// function min(a, b) {
//   if (a < b) {
//     return a;
//   }
//   return b;
// }

// console.log(min(2, 5)); // 2
// console.log(min(3, -1)); // -1
// console.log(min(1, 1)); // 1


// Example 3 - –ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getRectArea(dimensions) –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä dimensions –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
// –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// function getRectArea(dimensions) {
//   let rect = dimensions.split(" ");
//   let area = rect[0] * rect[1] * 0.5;
//   return area;
// }

// console.log(getRectArea('8 11'));


// Example 4 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é logItems(items), –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–∏–∫–ª for,
// –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ
// < –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ > - <–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ >.–ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.
// –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞['Mango', 'Poly', 'Ajax']
// —Å –∏–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –≤—ã–≤–µ–¥–µ—Ç 3 - Ajax.

// function logItems(items) {
//   for (let i = 0; i < items.length; i ++){
//     console.log(`${i+1} - ${ items[i] }`);
//   }
// }

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);


// Example 5 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é printContactsInfo(names, phones) –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –í –ø–∞—Ä–∞–º–µ—Ç—Ä—ã names –∏ phones –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.
// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// function printContactsInfo(names, phones) {
//   names = names.split(",");
//   phones = phones.split(",");
//   for (let i = 0; i < names.length; i += 1){
//     let info = names[i] +" "+ phones[i];
//     console.log(info);
//   }
// }

// printContactsInfo(
//   'Jacob,William,Solomon,Artemis',
//   '89001234567,89001112233,890055566377,890055566300',
// );


// Example 6 - –ü–æ–∏—Å–∫ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLargestNumber(numbers)–∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.

// function findLargestNumber(numbers) {
//   let max = numbers[0];
//   for (let i = 1; i < numbers.length; i += 1){
//     if (numbers[i] > max) max = numbers[i];
//   }
//   return max;
// }

// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83


// Example 7 - –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calAverage() –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª - –≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ
// –∑–Ω–∞—á–µ–Ω–∏–µ.–í—Å–µ –∞—Ä—É–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.

// function calAverage() {
//   let sum = 0;
//   for (const number of arguments) {
//     sum += number;
//   }
//   return sum / arguments.length;
// }

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2


// Example 8 - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é formatTime(minutes) –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –∑–Ω–∞—á–µ–Ω–∏–µ minutes
//(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –≤ —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç HH: MM.

// function formatTime(minutes) {
//   const hours = Math.floor(minutes / 60);
//   const minute = minutes % 60;

//   const doubleDigitHours = String(hours).padStart(2, 0);
//   const doubleDigitMinutes = String(minute).padStart(2, 0);
//   return `${doubleDigitHours}:${doubleDigitMinutes}`;
// }

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"


// Example 9 - –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫—É—Ä—Å–æ–≤ (includes, indexOf, push –∏ —Ç. –¥.)
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤ courses:
// addCourse(name) - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// removeCourse(name) - —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// updateCourse(oldName, newName) - –∏–∑–º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ
// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// function addCourse(name) {
//   if (courses.includes(name)) {
//     console.log('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å');
//   }
//   else return courses.push(name);
// }
// function removeCourse(name) {
//   if (courses.includes(name)) {
//     courses.splice(courses.indexOf(name), 1);
//   }
//   else console.log('–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
// }
// function updateCourse(oldName, newName) {
//   if (courses.includes(oldName)) {
//     courses.splice(courses.indexOf(oldName), 1, newName);
//   }
//   else console.log('–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
// }

// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å'
// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // '–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω'
// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']



// ========== –ú–æ–¥—É–ª—å 3. –ó–∞–Ω—è—Ç–∏–µ 5. –û–±'—î–∫—Ç–∏ ==========

// Example 1 - –û—Å–Ω–æ–≤—ã –æ–±—å–µ–∫—Ç–æ–≤
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π, –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ user, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ:
// –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ mood —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 'happy'
// –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ hobby –Ω–∞ 'skydiving'
// –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ premium –Ω–∞ false
// –≤—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–∞ user –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è Object.keys() –∏ for...of

// const user = {
//   name: 'Mango',
//   age: 20,
//   hobby: 'eat',
//   premium: true,
//   mood: 'sad',
// };

// user.mood = 'happy';
// user.hobby = 'skydiving';
// user.premium = 'false';
// for (const key in user) {
//   console.log(key, " ", user[key]);
// }


// Example 2 - –º–µ—Ç–æ–¥ Object.values()
// –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–∞—Ä–ø–ª–∞—Ç—ã –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö 
// –∑–∞—Ä–ø–ª–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum. –î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è 390. –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç salaries –ø—É—Å—Ç, 
//—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0.

const salaries = {
  John: 100,
  Ann: 160,
  Pete: 130,
};


// Example 3 - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ-—Ü–∏—é calcTotalPrice(stones, stoneName), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—å–µ–∫—Ç–æ–≤ 
// –∏ —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞–º–Ω—è. –§ - —Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–º–Ω–µ–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º,
// —Ü–µ–Ω–æ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–∑ –æ–±—å–µ–∫—Ç–∞

const stones = [
  { name: '–ò–∑—É–º—Ä—É–¥', price: 1300, quantity: 4 },
  { name: '–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç', price: 2700, quantity: 3 },
  { name: '–°–∞–ø—Ñ–∏—Ä', price: 400, quantity: 7 },
  { name: '–©–µ–±–µ–Ω—å', price: 200, quantity: 2 },
];


// Example 4 - –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–Ω–∫–∞. –ï—Å—Ç—å –æ–±—ä–µ–∫—Ç account –≤ –∫–æ—Ç–æ—Ä–æ–º
//–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.

/*
 * –¢–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞—Ü–∫–∏–π –≤—Å–µ–≥–æ –¥–≤–∞.
 * –ú–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å –ª–∏–±–æ —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á–µ—Ç–∞.
 */

const Transaction = {
  DEPOSIT: 'deposit',
  WITHDRAW: 'withdraw',
};

/*
 * –ö–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: id, type –∏ amount
 */

const account = {
  // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞
  balance: 0,

  // –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  transactions: [],

  /*
   * –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É –∏ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
   */
  createTransaction(amount, type) {},

  /*
   * –ú–µ—Ç–æ–¥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–º–º—ã –∫ –±–∞–ª–∞–Ω—Å—É.
   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —Ç–∞–Ω–∑–∞–∫—Ü–∏–∏.
   * –í—ã–∑—ã–≤–∞–µ—Ç createTransaction –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
   * –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
   */
  deposit(amount) {},

  /*
   * –ú–µ—Ç–æ–¥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–Ω—è—Ç–∏–µ —Å—É–º–º—ã —Å –±–∞–ª–∞–Ω—Å–∞.
   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —Ç–∞–Ω–∑–∞–∫—Ü–∏–∏.
   * –í—ã–∑—ã–≤–∞–µ—Ç createTransaction –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
   * –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
   *
   * –ï—Å–ª–∏ amount –±–æ–ª—å—à–µ —á–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å, –≤—ã–≤–æ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
   * –æ —Ç–æ–º, —á—Ç–æ —Å–Ω—è—Ç–∏–µ —Ç–∞–∫–æ–π —Å—É–º–º—ã –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.
   */
  withdraw(amount) {},

  /*
   * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
   */
  getBalance() {},

  /*
   * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞—Ü–∏–∏ –ø–æ id
   */
  getTransactionDetails(id) {},

  /*
   * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥—Å—Ç–≤
   * –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
   */
  getTransactionTotal(type) {},
};





// ========== –ú–æ–¥—É–ª—å 3. –ó–∞–Ω—è—Ç–∏–µ 6. &&& ==========


// ========== –ú–æ–¥—É–ª—å 4. –ó–∞–Ω—è—Ç–∏–µ 7. &&& ==========

// ========== –ú–æ–¥—É–ª—å 4. –ó–∞–Ω—è—Ç–∏–µ 8. &&& ==========
const bookShelf = {
  books: ["The last kingdom", "The guardian of dreams"],
  removeBook(bookName) {
    const index = this.books.indexOf(bookName);
    this.books.splice(index, 1);
    return `Deleting book ${bookName}`;
  },
  
  updateBook(oldName, newName){
    this.books.splice(oldName, 1, newName);
    return `Updating book ${oldName} to ${newName}`;
  },
};

console.log(bookShelf.removeBook('Red sunset'));
console.log(bookShelf.updateBook('Sands of dune', 'Dune'));